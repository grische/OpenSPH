---
name: CMake

# yamllint disable-line rule:truthy
on:
  push:
    branches:
      - devel
      - master
  pull_request:
    branches:
      - devel
      - master

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release

jobs:
  build:
    # The CMake configure and build commands are platform agnostic and should work equally well on Windows or Mac.
    # You can convert this to a matrix build if you need cross-platform coverage.
    # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
    runs-on: ubuntu-latest
    container: aswf/ci-vfxall:2021

    steps:
      - uses: actions/checkout@v2

      - name: Install C++ dependencies
        if: runner.os == 'Linux'
        run: |
          yum install -y --setopt=tsflags=nodocs wxGTK3-devel eigen3-devel

      - name: Configure CMake
        # `CMAKE_BUILD_TYPE` is only required if you are using a single-configuration generator such as make.
        # See https://cmake.org/cmake/help/latest/variable/CMAKE_BUILD_TYPE.html?highlight=cmake_build_type
        run: |
          cmake -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE:STRING=${{env.BUILD_TYPE}} \
          -DWITH_EIGEN:STRING=ON \
          -DWITH_VDB:STRING=ON \
          -DWITH_TBB:STRING=ON

      - name: Build
        # Build your program with the given configuration
        run: cmake --build ${{github.workspace}}/build --config ${{env.BUILD_TYPE}} -j4

      - name: Test
        if: ${{ false }}  # Skip tests until they work properly
        working-directory: ${{github.workspace}}/build
        # Execute tests defined by the CMake configuration.
        # See https://cmake.org/cmake/help/latest/manual/ctest.1.html for more detail
        run: ctest -C ${{env.BUILD_TYPE}}
