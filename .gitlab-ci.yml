before_script:  
#- echo "deb http://apt.llvm.org/xenial/ llvm-toolchain-xenial-4.0 main" >> /etc/apt/sources.list.d/llvm.list
#- wget -O - http://apt.llvm.org/llvm-snapshot.gpg.key | apt-key add -
  - apt-get update -qy
  - apt-get install -y clang qt5-default libwxgtk3.0-dev wx3.0-headers wx-common
    #- ln -s /usr/bin/clang++-4.0 /usr/bin/clang++
 
gcc_debug:
  stage: build
  script:
    - mkdir gcc_debug
    - cd gcc_debug
    - qmake -spec linux-g++ CONFIG+=debug ../sph.pro
    - make
    
gcc_release:
  stage: build
  script:
    - mkdir gcc_release
    - cd gcc_release
    - qmake -spec linux-g++ CONFIG+=release ../sph.pro
    - make

clang_debug:
  stage: build
  script:
    - mkdir gcc_debug
    - cd gcc_debug
    - qmake -spec linux-clang CONFIG+=debug ../sph.pro
    - make
    
clang_release:
  stage: build
  script:
    - mkdir gcc_release
    - cd gcc_release
    - qmake -spec linux-clang CONFIG+=release ../sph.pro
    - make

test_debug:
  stage: test
  script:
    - wget -P /usr/include/catch2/ "https://github.com/catchorg/Catch2/releases/download/v2.5.0/catch.hpp"
    - mkdir tests
    - cd tests
    - qmake -spec linux-g++ DEFINES+="SPH_CONFIG_SET" CONFIG+=debug ../test.pro
    - make
    - cd test
    - ./test -d yes exclude:[output] exclude:[filesystem] exclude:[path] exclude:[thread] exclude:[grid]


test_release:
  stage: test
  script:
    - wget -P /usr/include/catch2/ "https://github.com/catchorg/Catch2/releases/download/v2.5.0/catch.hpp" 
    - mkdir tests
    - cd tests
    - qmake -spec linux-g++ DEFINES+="SPH_CONFIG_SET" CONFIG+=release ../test.pro
    - make
    - cd test
    - ./test -d yes exclude:[output] exclude:[filesystem] exclude:[path] exclude:[thread] exclude:[grid]

examples:
  stage: test
  script:
    - mkdir examples_build
    - cd examples_build
    - qmake -spec linux-clang CONFIG+=devel ../examples.pro
    - make
    - cd examples
    - 01_hello_asteroid/01_hello_asteroid
    - 02_death_star/02_death_star
    - 03_van_der_waals/03_van_der_waals
    - 04_simple_collision/04_simple_collision
    - 05_fragmentation_reaccumulation/05_fragmentation_reaccumulation
    - 06_heat_diffusion/06_heat_diffusion

regression:
  tags:
    - opensph # might take a long time, do not run on shared runners
  stage: test
  script:
    - apt-get install -y gnuplot
    - mkdir regression_build
    - cd regression_build
    - qmake -spec linux-g++ CONFIG+=release ../sph.pro
    - make
    - cd ..
    - cd regression/impact
    - ../../regression_build/cli/launcher/opensph-cli -p impact.sph -n "save text file"
    - ../../regression_build/cli/launcher/opensph-cli -p impact.sph -n "compare with reference"
    - gnuplot plot.plt
  artifacts:
    paths:
      - regression/impact/result.scf
      - regression/impact/plot.png

build_package:
  stage: deploy
  only:
    refs:
      - master
  script:
    - apt-get install -y dpkg libtbb-dev
    - mkdir gcc_deploy
    - cd gcc_deploy
    - qmake -spec linux-g++ CONFIG+=release CONFIG+=use_tbb ../sph.pro
    - make
    - cd ..
    - mkdir -p opensph_0.3.2-1/usr/local/bin
    - cp gcc_deploy/gui/launcherGui/opensph  opensph_0.3.2-1/usr/local/bin/
    - cp gcc_deploy/cli/launcher/opensph-cli opensph_0.3.2-1/usr/local/bin/
    - cp gcc_deploy/cli/info/opensph-info    opensph_0.3.2-1/usr/local/bin/
    - mkdir -p opensph_0.3.2-1/DEBIAN
    - cp control opensph_0.3.2-1/DEBIAN/control
    - dpkg-deb --build opensph_0.3.2-1
  artifacts:
    paths:
      - opensph_0.3.2-1.deb
